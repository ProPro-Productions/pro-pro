// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicFooter,
  DefaultFooterProps,
} from "./plasmic/pro_pro/PlasmicFooter";
import { HTMLElementRefOf } from "@plasmicapp/react-web";
import axios from "axios";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface FooterProps extends Omit<DefaultFooterProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultFooterProps altogether and have
// total control over the props for your component.
export interface FooterProps extends DefaultFooterProps {}

function Footer_(props: FooterProps, ref: HTMLElementRefOf<"div">) {
  const [email, setEmail] = React.useState("");
  const [stage, setStage] = React.useState<
    "beforeSubmit" | "afterSubmit" | "failedSubmit" | undefined
  >("beforeSubmit");

  // Use PlasmicFooter to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicFooter are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, we are just piping all FooterProps here, but feel free
  // to do whatever works for you.

  return (
    <PlasmicFooter
      root={{ ref, style: { background: "black" } }}
      {...props}
      newsletterForm={{
        stage: stage,
        emailInput: {
          className: "outline-none",
          style: {
            backgroundColor: "transparent",
            border: "0px transparent",
            color: "white",
            width: "100%",
            fontSize: "1.25rem",
            padding: "0.5rem",
          },
          // className: "border-none focus:ring-0 text-white",
          type: "email",
          required: true,
        },
        submitButton: { style: { border: "0px !important" } },
        onChange: (e: React.ChangeEvent<HTMLInputElement>) =>
          setEmail(e.target.value),
        sendNewsLetter: async (e) => {
          const form = document.getElementById(
            "newsletter-form",
          ) as HTMLFormElement;
          e.preventDefault();
          if (!form.checkValidity()) {
            var tmpSubmit = document.createElement("button");
            form.appendChild(tmpSubmit);
            tmpSubmit.click();
            form.removeChild(tmpSubmit);
          } else {
            sendEmail(email, setStage);
            setEmail("");
          }
        },
      }}
    />
  );
}

const Footer = React.forwardRef(Footer_);
export default Footer;

async function sendEmail(email: string, setStage: Function) {
  try {
    await axios.post("/api/sendConformationMail", {
      email: email,
    });
    setStage("afterSubmit");
  } catch (error) {
    setStage("failedSubmit");
  }
}
